################################################################################
# Created on 2017-05-10 by Ulrich Belitz
################################################################################

project(${ProjectName})

set(CMAKE_INCLUDE_CURRENT_DIR ON)

################################################################################
# pick up files
################################################################################

file(GLOB_RECURSE Headers ${CMAKE_CURRENT_SOURCE_DIR}/*.h)
source_group("Headers" FILES ${Headers})

set(QtBuildHelperOutputFile QtBuildHelperOutput.cpp)

if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${QtBuildHelperOutputFile})
  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${QtBuildHelperOutputFile} "/* file is generated by QtBuildHelper - changes will be overwritten */")
endif()

file(GLOB_RECURSE Sources ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
list(APPEND Sources ${CMAKE_CURRENT_BINARY_DIR}/${QtBuildHelperOutputFile})
source_group("Sources" FILES ${Sources})


file(GLOB_RECURSE WinResources ${CMAKE_CURRENT_SOURCE_DIR}/*.rc)
file(GLOB_RECURSE QtResources ${CMAKE_CURRENT_SOURCE_DIR}/*.qrc)
set(Resources
  ${WinResources}
  ${QtResources}
)
source_group("Resources" FILES ${Resources})

file(GLOB_RECURSE Forms ${CMAKE_CURRENT_SOURCE_DIR}/*.ui)
source_group("Forms" FILES ${Forms})

file(GLOB_RECURSE Configuration ${CMAKE_CURRENT_SOURCE_DIR}/*.xml)
source_group("Configuration" FILES ${Configuration})

file(GLOB_RECURSE StyleSheets ${CMAKE_CURRENT_SOURCE_DIR}/*.css)
source_group("StyleSheets" FILES ${StyleSheets})

file(GLOB_RECURSE Replicas ${CMAKE_CURRENT_SOURCE_DIR}/*.rep)
source_group("Replicas" FILES ${Replicas})

set(AllSources
  ${Headers}
  ${Sources}
  ${Resources}
  ${Forms}
  ${Configuration}
  ${StyleSheets}
  ${Replicas}
)

################################################################################
# add project to solution
################################################################################

if ("${Type}" STREQUAL  "ConsoleApplication")
  add_executable(${ProjectName} ${AllSources})
elseif("${Type}" STREQUAL  "WidgetsApplication")
  add_executable(${ProjectName} WIN32 ${AllSources})
elseif("${Type}" STREQUAL  "Library" OR "${Type}" STREQUAL  "Widget")
  add_library(${ProjectName} SHARED ${AllSources})
endif()

target_link_libraries(${ProjectName}
  ${QtLinkLibraries}
  ${RequiredLibraries}
)

################################################################################
# declare library interface
################################################################################
if ("${Type}" STREQUAL  "Library" OR "${Type}" STREQUAL  "Widget")
  string(TOUPPER ${ProjectName} ProjectNameUppercased)
  set_property(TARGET ${ProjectName} APPEND PROPERTY COMPILE_DEFINITIONS
    ${ProjectNameUppercased}_EXPORT
    _USRDLL
    _WINDOWS
  )
  
  target_include_directories(${ProjectName} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/API")
endif()

################################################################################
# group projects
################################################################################
if ("${FolderName}" STREQUAL  "")
  if ("${Type}" STREQUAL  "ConsoleApplication")    
    set(FolderName ConsoleApplications)
  elseif("${Type}" STREQUAL  "WidgetsApplication")    
    set(FolderName WidgetsApplications)
  elseif("${Type}" STREQUAL  "Widget")
    set(FolderName Widgets)
  elseif("${Type}" STREQUAL  "Library")
    set(FolderName Libraries)
  endif()
endif()

set_target_properties(${ProjectName} PROPERTIES FOLDER ${FolderName})

################################################################################
# QtBuildHelper
################################################################################
add_dependencies(${ProjectName} QtBuildHelper)
add_custom_command(TARGET ${ProjectName} PRE_BUILD COMMAND QtBuildHelper.exe ARGS
  -id ${CMAKE_CURRENT_SOURCE_DIR}
  -od ${CMAKE_CURRENT_BINARY_DIR}
  -qbd ${QtBinDir}
  -qid ${QtIncludeDir}
  WORKING_DIRECTORY ${QtBuilderWorkingDir}
)

################################################################################
# copy to plugins directory, if designer widget
################################################################################
#if ("${Type}" STREQUAL  "Widget")
#  add_custom_command(TARGET ${ProjectName} POST_BUILD
#    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${ProjectName}.dll ${CMAKE_CURRENT_BINARY_DIR}/../plugins/designer/${ProjectName}.dll
#  )
#endif()